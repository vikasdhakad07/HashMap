Method 01: Fraction pairs with sum 1


class Solution {
    public static int countFractions(int n, int[] numerator, int[] denominator) {
        // code here
        int count=0;
        HashMap<String,Integer> map=new HashMap<>();
        
        for(int i=0;i<n;i++){
            int gcd=gcd(numerator[i],denominator[i]);
            String fraction=(numerator[i]/gcd+"/"+denominator[i]/gcd);
            String diffraction=(denominator[i]/gcd-numerator[i]/gcd)+"/"+denominator[i]/gcd;
            
            if(map.containsKey(diffraction)){
                count+=map.get(diffraction);
            }
            
            map.put(fraction,map.getOrDefault(fraction,0)+1);
        }
        return count;
    }
    
    public static int gcd(int a,int b){
        if(b==0){
            return a;
        }
        return gcd(b,a%b);
    }
}
